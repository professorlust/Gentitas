// <auto-generated>
//     This code was generated with love by Gentitas.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using Entitas;
using UnityEngine;
using System.Collections.Generic;

namespace BaseSystems {
{{#each reactiveSystems}}
    public abstract class {{className}}: ReactiveSystem<{{context.nameUpper}}Entity> {
        protected {{context.nameUpper}}Context context;

        public {{className}} ({{context.nameUpper}}Context context) : base(context) { 
            this.context = context;
        }

        {{> propsEntity}}
        {{> propsGroup}}
        {{> propsGroupSingle}}
        {{> propsContext}}

        {{#if filter}}
        List<{{context.nameUpper}}Entity> _bufferValueFilteredEntities = new List<{{context.nameUpper}}Entity>();
        {{/if}}

        protected override Collector<{{context.nameUpper}}Entity> GetTrigger (IContext<{{context.nameUpper}}Entity> context) {
            return new Collector<{{context.nameUpper}}Entity>(
                new IGroup<{{context.nameUpper}}Entity>[] { 
                    {{#each triggers}}
                    context.GetGroup(Matcher<{{../context.nameUpper}}Entity>{{#if this.matcher.allOf.length}}
                        .AllOf({{#each this.matcher.allOf}}{{../../context.nameUpper}}Matcher.{{nameUpper}}{{#unless @last}}, {{/unless}}{{/each}}){{/if}}{{#if this.matcher.anyOf.length}}
                        .AnyOf({{#each this.matcher.anyOf}}{{../../context.nameUpper}}Matcher.{{nameUpper}}{{#unless @last}}, {{/unless}}{{/each}}){{/if}}{{#if this.matcher.noneOf.length}}
                        .NoneOf({{#each this.matcher.noneOf}}{{../../context.nameUpper}}Matcher.{{nameUpper}}{{#unless @last}}, {{/unless}}{{/each}}){{/if}}){{#unless @last}},{{/unless}}
                    {{/each}}
                },
                new GroupEvent[] { 
                    {{#each triggers}}
                    GroupEvent.{{this.eventType}}{{#unless @last}}, {{/unless}}
                    {{/each}} 
                }  
            );
        }

        protected override bool Filter ({{context.nameUpper}}Entity entity) {
            {{#each ensure}}
            if (!entity.{{#if this.prefix}}{{toLower this.prefix}}{{else}}{{#if this.fields}}has{{else}}is{{/if}}{{/if}}{{toUpper this.name}}) return false;
            {{/each}}
            {{#each exclude}}
            if (entity.{{#if this.prefix}}{{toLower this.prefix}}{{else}}{{#if this.fields}}has{{else}}is{{/if}}{{/if}}{{toUpper this.name}}) return false;
            {{/each}}
            return true;
        }
        
        protected override void Execute(List<{{context.nameUpper}}Entity> entities) {
            {{#if bunchEntities}}
            {{#if filter}}
            for (var i = 0; i < entities.Count; i++) {
                if (ValueFilter(entities[i])) {
                    _bufferValueFilteredEntities.Add(entities[i]);
                }
            }
            Act(_bufferValueFilteredEntities);
            _bufferValueFilteredEntities.Clear();
            {{else}}
            Act(entities);
            {{/if}}
            {{else}}
            for (var i = 0; i < entities.Count; i++) {
                {{#if filter}}
                if (ValueFilter(entities[i])) Act(entities[i]);
                {{else}}
                Act(entities[i]);
                {{/if}}
            }
            {{/if}}
        }

        {{#if filter}}
        protected virtual bool ValueFilter ({{context.nameUpper}}Entity entity) { return true; }
        {{/if}}

        {{#if bunchEntities}}
        protected virtual void Act(List<{{context.nameUpper}}Entity> entities) { }
        {{else}}
        protected virtual void Act({{context.nameUpper}}Entity entity) { }
        {{/if}}
    }
{{/each}}
}

{{#each reactiveSystems}}
/// <summary>
{{#each triggers}}
/// <para>{{this.eventType}}: {{#if this.matcher.allOf.length}}AllOf({{#each this.matcher.allOf}}{{toUpper this.name}}{{#unless @last}}, {{/unless}}{{/each}}) {{/if}}{{#if this.matcher.anyOf.length}}AnyOf({{#each this.matcher.anyOf}}{{toUpper this.name}}{{#unless @last}}, {{/unless}}{{/each}}) {{/if}}{{#if this.matcher.noneOf.length}}NoneOf({{#each this.matcher.noneOf}}{{toUpper this.name}}{{#unless @last}}, {{/unless}}{{/each}}) {{/if}}
/// </para><br/>
{{/each}}
{{#if ensure.length}}
/// <para>Ensure: {{#each ensure}}{{toUpper this.name}}{{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
{{#if exclude.length}}
/// <para>Exclude: {{#each exclude}}{{toUpper this.name}}{{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
{{> intellisenseDocs}}
{{#if filter}}
/// <para>Implement: ValueFilter({{context.nameUpper}}Entity entity)</para><br/>
{{/if}}
{{#if bunchEntities}}
/// <para>Implement: Act(List of {{context.nameUpper}}Entity entities)</para><br/>
{{else}}
/// <para>Implement: Act({{context.nameUpper}}Entity entity)</para><br/>
{{/if}}
/// </summary>
public partial class {{className}}: BaseSystems.{{className}} {
    public {{className}} ({{context.nameUpper}}Context context) : base (context) { }
 }

{{/each}}
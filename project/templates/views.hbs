// <auto-generated>
//     This code was generated with love by Gentitas.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using Entitas;
using UnityEngine;
using System.Collections.Generic;

public abstract class BaseMainView : MonoBehaviour {
    Feature chains;

    void Awake() {
        Contexts.sharedInstance = new Contexts();
        Contexts.sharedInstance.SetAllContexts();

        chains = new Feature("Chains");
        {{#each chains}}
        chains.Add(new Chains.{{this.className}}());
        {{/each}}

        chains.Initialize();
    }

    void Update() {
        chains.Execute();
    }
}

{{#each views}}
// {{className}}
public interface {{interfaceName}}{{#if inheritInterfaces}}:{{/if}} {{#each inheritInterfaces}}{{this.name}}{{#unless @last}}, {{/unless}}{{/each}} {
    {{#each methods}}
    {{#if new}}new {{/if}}{{this.ret}} {{toUpper this.name}}({{#each this.fields}}{{#each this}}{{this}} {{@key}}{{#unless @last}}, {{/unless}}{{/each}}{{/each}});
    {{/each}}
} 

/// <summary>
{{#if propsMB.length}}
/// <para>MB: {{#each propsMB}}{{this.type}}{{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
{{#if propsMBExternal.length}}
/// <para>MBExternal: {{#each propsMBExternal}}{{this.type}}{{toUpper this.name}}{{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
{{#if propsGO}}
/// <para>GO: {{#each propsGO}}{{this.name}}{{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
{{> intellisenseDocs}}
{{#if methods.length}}
/// <para>Implement: {{#each methods}}{{toUpper this.name}}({{#each this.fields}}{{#each this}}{{this}} {{@key}}{{#unless @last}}, {{/unless}}{{/each}}){{/each}}{{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
{{#if methodsEditor.length}}
/// <para>Implement For Editor: {{#each methodsEditor}}{{toUpper this.name}}(){{#unless @last}}, {{/unless}}{{/each}}</para><br/>
{{/if}}
/// </summary>
{{#each propsMB}}
[RequireComponent(typeof({{this.type}}))]
{{/each}}
public abstract class Base{{className}}: {{#if inheritClass}}{{this.inheritClass}}{{else}}MonoBehaviour{{/if}}, {{interfaceName}} {
    {{> propsEntity}}
    {{> propsGroup}}
    {{> propsGroupSingle}}
    {{> propsContext}}
    {{> propsMB}}
    {{> propsMBExternal}}
    {{> propsGO}}
    {{> methods}}
    {{> methodsEditor}}
}

{{/each}}